From 3e8b8625d1484cfff13178b29f13042ad02e818a Mon Sep 17 00:00:00 2001
From: Xiang Chen <chenxiang66@hisilicon.com>
Date: Thu, 8 Jun 2023 11:04:47 +0800
Subject: [PATCH 231/256] scsi: sd: try more retries of START_STOP when
 resuming scsi device

driver inclusion
category: bugfix
bugzilla: https://gitee.com/src-openeuler/kernel/issues/I8F803
CVE: NA

----------------------------------------------------------------------

When sending START_STOP commands to resume scsi_device, it may be
interrupted by exception operations such as host reset or FLR.
Once the command of START_STOP is failed, the runtime_status of
scsi device will be error and it is difficult for user to recover it.
So try more retries to increase robustness as the process of
command SYNCHRONIZE_CACHE in function sd_sync_cache() when suspending
scsi device.

Signed-off-by: Xiang Chen <chenxiang66@hisilicon.com>
Signed-off-by: xiabing <xiabing12@h-partners.com>
Signed-off-by: YunYi Yang <yangyunyi2@huawei.com>
---
 drivers/scsi/sd.c | 24 ++++++++++++++++++------
 1 file changed, 18 insertions(+), 6 deletions(-)

diff --git a/drivers/scsi/sd.c b/drivers/scsi/sd.c
index 668be9ce6243..c93029b32005 100644
--- a/drivers/scsi/sd.c
+++ b/drivers/scsi/sd.c
@@ -3622,6 +3622,7 @@ static int sd_suspend_common(struct device *dev, bool ignore_stop_errors)
 {
 	struct scsi_disk *sdkp = dev_get_drvdata(dev);
 	struct scsi_sense_hdr sshdr;
+	int retries;
 	int ret = 0;
 
 	if (!sdkp)	/* E.g.: runtime suspend following sd_remove() */
@@ -3652,9 +3653,15 @@ static int sd_suspend_common(struct device *dev, bool ignore_stop_errors)
 	if (sdkp->device->manage_start_stop) {
 		sd_printk(KERN_NOTICE, sdkp, "Stopping disk\n");
 		/* an error is not worth aborting a system sleep */
-		ret = sd_start_stop_device(sdkp, 0);
-		if (ignore_stop_errors)
-			ret = 0;
+		for (retries = 3; retries > 0; --retries) {
+			ret = sd_start_stop_device(sdkp, 0);
+			if (!ret)
+				break;
+			if (ignore_stop_errors) {
+				ret = 0;
+				break;
+			}
+		}
 	}
 
 	return ret;
@@ -3673,6 +3680,7 @@ static int sd_suspend_runtime(struct device *dev)
 static int sd_resume(struct device *dev)
 {
 	struct scsi_disk *sdkp = dev_get_drvdata(dev);
+	int retries;
 	int ret;
 
 	if (!sdkp)	/* E.g.: runtime resume at the start of sd_probe() */
@@ -3682,9 +3690,13 @@ static int sd_resume(struct device *dev)
 		return 0;
 
 	sd_printk(KERN_NOTICE, sdkp, "Starting disk\n");
-	ret = sd_start_stop_device(sdkp, 1);
-	if (!ret)
-		opal_unlock_from_suspend(sdkp->opal_dev);
+	for (retries = 3; retries > 0; --retries) {
+		ret = sd_start_stop_device(sdkp, 1);
+		if (!ret) {
+			opal_unlock_from_suspend(sdkp->opal_dev);
+			break;
+		}
+	}
 	return ret;
 }
 
-- 
2.27.0

