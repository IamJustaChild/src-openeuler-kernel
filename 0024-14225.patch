From 279803fa98908bd367cec04ae2600c15764fb977 Mon Sep 17 00:00:00 2001
From: Luo Gengkun <luogengkun2@huawei.com>
Date: Wed, 18 Dec 2024 09:45:31 +0000
Subject: [PATCH 1/3] kabi: reserve space for perf_event.h

hulk inclusion
category: feature
bugzilla: https://gitee.com/src-openeuler/kernel/issues/IBC1PM

--------------------------------

reserve space for perf_event.h

Signed-off-by: Luo Gengkun <luogengkun2@huawei.com>
---
 include/linux/perf_event.h | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/include/linux/perf_event.h b/include/linux/perf_event.h
index 89f2a02db563..fe692e9bd0b2 100644
--- a/include/linux/perf_event.h
+++ b/include/linux/perf_event.h
@@ -1010,6 +1010,14 @@ struct perf_cpu_pmu_context {
 	struct hrtimer			hrtimer;
 	ktime_t				hrtimer_interval;
 	unsigned int			hrtimer_active;
+	KABI_RESERVE(1)
+	KABI_RESERVE(2)
+	KABI_RESERVE(3)
+	KABI_RESERVE(4)
+	KABI_RESERVE(5)
+	KABI_RESERVE(6)
+	KABI_RESERVE(7)
+	KABI_RESERVE(8)
 };
 
 /**
@@ -1031,6 +1039,14 @@ struct perf_cpu_context {
 	int				heap_size;
 	struct perf_event		**heap;
 	struct perf_event		*heap_default[2];
+	KABI_RESERVE(1)
+	KABI_RESERVE(2)
+	KABI_RESERVE(3)
+	KABI_RESERVE(4)
+	KABI_RESERVE(5)
+	KABI_RESERVE(6)
+	KABI_RESERVE(7)
+	KABI_RESERVE(8)
 };
 
 struct perf_output_handle {
-- 
Gitee


From 078ad81846b81844eb98f90eee57c06954715c8d Mon Sep 17 00:00:00 2001
From: Luo Gengkun <luogengkun2@huawei.com>
Date: Wed, 18 Dec 2024 09:45:32 +0000
Subject: [PATCH 2/3] kabi: reserve space for internal.h

hulk inclusion
category: feature
bugzilla: https://gitee.com/src-openeuler/kernel/issues/IBC1PM

--------------------------------

reserve space for internal.h

Signed-off-by: Luo Gengkun <luogengkun2@huawei.com>
---
 kernel/events/internal.h | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/kernel/events/internal.h b/kernel/events/internal.h
index d2e6e6144c54..d1ffa00b91b6 100644
--- a/kernel/events/internal.h
+++ b/kernel/events/internal.h
@@ -5,6 +5,7 @@
 #include <linux/hardirq.h>
 #include <linux/uaccess.h>
 #include <linux/refcount.h>
+#include <linux/kabi.h>
 
 /* Buffer handling */
 
@@ -54,6 +55,15 @@ struct perf_buffer {
 	void				**aux_pages;
 	void				*aux_priv;
 
+	KABI_RESERVE(1)
+	KABI_RESERVE(2)
+	KABI_RESERVE(3)
+	KABI_RESERVE(4)
+	KABI_RESERVE(5)
+	KABI_RESERVE(6)
+	KABI_RESERVE(7)
+	KABI_RESERVE(8)
+
 	struct perf_event_mmap_page	*user_page;
 	void				*data_pages[];
 };
-- 
Gitee


From 59a2a3e8b1c35d9e0bde08cd2e6f01f1c12d384b Mon Sep 17 00:00:00 2001
From: Luo Gengkun <luogengkun2@huawei.com>
Date: Wed, 18 Dec 2024 09:45:33 +0000
Subject: [PATCH 3/3] kabi: reserve space for uprobes.h

hulk inclusion
category: feature
bugzilla: https://gitee.com/src-openeuler/kernel/issues/IBC1PM

--------------------------------

reserve space for uprobes.h

Signed-off-by: Luo Gengkun <luogengkun2@huawei.com>
---
 include/linux/uprobes.h | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/include/linux/uprobes.h b/include/linux/uprobes.h
index f46e0ca0169c..86d0868b584a 100644
--- a/include/linux/uprobes.h
+++ b/include/linux/uprobes.h
@@ -47,6 +47,7 @@ struct uprobe_consumer {
 
 #ifdef CONFIG_UPROBES
 #include <asm/uprobes.h>
+#include <linux/kabi.h>
 
 enum uprobe_task_state {
 	UTASK_RUNNING,
@@ -78,6 +79,14 @@ struct uprobe_task {
 
 	struct return_instance		*return_instances;
 	unsigned int			depth;
+	KABI_RESERVE(1)
+	KABI_RESERVE(2)
+	KABI_RESERVE(3)
+	KABI_RESERVE(4)
+	KABI_RESERVE(5)
+	KABI_RESERVE(6)
+	KABI_RESERVE(7)
+	KABI_RESERVE(8)
 };
 
 struct return_instance {
-- 
Gitee

